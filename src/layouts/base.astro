---
import '../styles/styles.css';
const { content: { title, updated, related, description } } = Astro.props;
const fallbackDescription = "A personal website, blog, and open knowledge base.";
const metaDescription = description ?? fallbackDescription;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content={ metaDescription }>
    <meta name="theme-color" content="#FFFFFF" media="(prefers-color-scheme: light)">
    <meta name="theme-color" content="#000000" media="(prefers-color-scheme: dark)">
    <title>{ title } - Steve Della Valentina</title>
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
  </head>
  <body>
    <header>
      <ul>
        <li><a href="/">Home</a></li>
        <li><a href="/blog">Blog</a></li>
        <li><a href="/about">About</a></li>
      </ul>
    </header>

    <main>
      { title && <h1>{ title }</h1>}
      <slot />

      { related && <>
        <h3>Related</h3>
        <ul>
          { Object.entries(related).map(([ title, url ]) => (
            <li><a href={`${url}`}>{title}</a></li>
          )) }
        </ul>
      </> }
    </main>

    { updated && (
    <footer>
      <small>
        <span>Last updated:</span>
        <date>{ new Date(updated).toLocaleDateString('en-us', {
          year: "numeric",
          month: "long",
          day: "numeric",
        }) }</date>
      </small>
    </footer>
    )}

  </body>
</html>