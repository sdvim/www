$cube-size: 33px;
.logocube {
  margin: auto;
  position: relative;
  &-3D {
    bottom: 0;
    height: $cube-size;
    margin: auto 0;
    position: absolute;
    top: 0;
    transform-style: preserve-3d;
    transform: rotateX(55deg) rotateZ(45deg) translateX(10px);
    width: $cube-size;
    &.animate {
      &-ready {
        @include transition(transform, .4s);
        @at-root .logocube:hover & {
          transform: rotateX(-180deg) translate(7px, -7px) scale(1.1);
          .logocube-face.home,
          + .logocube-text.home { opacity: 1; }
          + .logocube-text.home { transform: translateX($line-height); }
        }
      }
      &-spin {
        animation: rotate 3s cubic-bezier(.37, .2, .26, 1) .25s 1 forwards;
        transform: rotateX(-180deg) translate(7px, -7px) scale(1.1);
      }
      &-drawn {
        animation: quickspin 3s linear .25s 1 forwards;
        .logocube-face {
          animation: drawnstroke 3s linear .25s 1 forwards;
          stroke-dashoffset: -640;
        }
      }
    }
  }
  &-text {
    color: currentColor;
    // left: $line-height * 4;
    // float: left;
    text-transform: uppercase;
    &.home {
      @include transition(null, .4s);
      opacity: 0;
      margin-left: $line-height * 2;
      transition-property: opacity, transform;
    }
    &.fullname {
      margin-left: $line-height * 3;
    }
    &.animated {
      span {
        animation: 1s cubic-bezier(.37, .2, .26, 1) 1 forwards;
        display: inline-block;
        will-change: transform;
        &:nth-child(1) {
          animation-delay: .25s;
          animation-name: text-appear-s;
          transform: translateY(-100%);
        }
        &:nth-child(2) {
          animation-delay: 1.25s;
          animation-name: text-appear-d;
          margin: 0 .25rem;
          transform: rotateX(90deg);
          transform-origin: 50% 55% 0;
        }
        &:nth-child(3) {
          animation-delay: 2.25s;
          animation-name: text-appear-v;
          transform: rotateY(90deg);
          transform-origin: left;
        }
      }
    }
  }
  &-face {
    backface-visibility: hidden;
    height: $cube-size;
    position: absolute;
    stroke-dasharray: 640;
    stroke-width: 1px;
    width: $cube-size;
    &.home {
      background: transparent;
      height: $cube-size * 1.4;
    }
    &.top { transform: rotateY(0deg) translateZ($cube-size / 2); }
    &.bottom { transform: rotateX(180deg) translateZ($cube-size / 2); }
    &.right { transform: rotateY(90deg) rotateZ(-90deg) translateZ($cube-size / 2); }
    &.left { transform: rotateY(-90deg) rotateZ(90deg) translateZ($cube-size / 2); }
    &.front { transform: rotateX(90deg) rotateZ(180deg) translateZ($cube-size / 2); }
    &.back { transform: rotateX(-90deg) rotateZ(0deg) translateZ($cube-size / 2); }
  }
  path { fill: currentColor; }
}
@keyframes text-appear-s {
  to { transform: translateY(0); }
}
@keyframes text-appear-d {
  to { transform: rotateX(0); }
}
@keyframes text-appear-v {
  to { transform: rotateY(0); }
}
@keyframes drawnstroke {
  from { stroke-dashoffset: -640; }
  to { stroke-dashoffset: 0; }
}
@keyframes quickspin {
  from { transform: rotateX(55deg) rotateZ(45deg - 360); }
  to { transform: rotateX(55deg) rotateZ(45deg); }
}
@keyframes rotate {
  33% { transform: translate(7px, 4px); }
  66% { transform: translate(7px, 4px) rotateX(55deg) rotateZ(0deg); }
  100% { transform: translate(7px, 4px) rotateX(55deg) rotateZ(45deg); }
}
